import cv2
import numpy as np


//////////You can us the better one which will be more appropriate for your image and commemt out the other methods, as i did.//////////////

img = cv2.imread("/home/Downloads/sample4.jpg")
#hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
#xyz = cv2.cvtColor(img, cv2.COLOR_BGR2XYZ)
blur = cv2.GaussianBlur(img,(5,5),0)
lab = cv2.cvtColor(blur, cv2.COLOR_LRGB2LAB)

lab_planes = cv2.split(lab)

clahe = cv2.createCLAHE(clipLimit=2.0,tileGridSize=(255,255))

lab_planes[0] = clahe.apply(lab_planes[0])

lab = cv2.merge(lab_planes)

#threshold1 = cv2.adaptiveThreshold(grayscaled, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 115, 1)
#retval2,threshold2 = cv2.threshold(grayscaled,50,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)

#ret3, threshold = cv2.threshold(blur,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)
retval, threshold = cv2.threshold(lab, 160, 255, cv2.THRESH_BINARY)
#cv2.imshow('original',grayscaled = cv2.cvtColor(threshold, cv2.COLOR_BGR2GRAY)
#retval, threshold = cv2.threshold(grayscaled, 100,550 , cv2.THRESH_BINARY)
#mean_c = cv2.adaptiveThreshold(grayscaled, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 15, 12)
#gaus = cv2.adaptiveThreshold(grayscaled, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 91, 12)
edged = cv2.Canny(grayscaled, 200, 250)
#cv2.imshow("Edges", edged)
cv2.imshow('Original', img)
#cv2.imshow('Lab',lab)
cv2.imshow('Threshold',grayscaled)
#cv2.imshow('Threshold2',threshold)
cv2.imshow('Canny',edged)
#cv2.imshow("Mean C", mean_c)
#cv2.imshow("Gaussian", gaus)
#cv2.imshow('Otsu threshold',threshold2)
#cv2.imshow('Adaptive threshold',threshold1)
cv2.waitKey(0)
cv2.destroyAllWindows()
